{
  "openapi": "3.0.1",
  "info": {
    "title": "Identity service's RESTful APIs documentation",
    "version": "v1"
  },
  "paths": {
    "/api/Account/Authorization": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "For authorization user to jobs services",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "login": {
                  "style": "form"
                },
                "password": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return AuthInfo = {token, refreshToken} when authorization finished successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringTuple"
                }
              }
            }
          },
          "404": {
            "description": "A user with the specified login and password was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/RefreshToken": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "For refreshing exist token of user",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "refreshToken": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return AuthInfo = {token, refreshToken} when token updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringTuple"
                }
              }
            }
          },
          "404": {
            "description": "A user with the specified login and password was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/LogOut": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "To log out user from jobs services",
        "responses": {
          "200": {
            "description": "If finished successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/UserInfo": {
      "get": {
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/User": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "To add a new item. For this you must be authorized",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return OK if it's added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestModel"
                }
              }
            }
          },
          "400": {
            "description": "The Password field is required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "To update exists user info. For this you must be authorized",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return OK if it's updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestModel"
                }
              }
            }
          },
          "404": {
            "description": "An item with the specified ID was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "To get all items",
        "responses": {
          "200": {
            "description": "Return list of found items if it's finished successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "To get an item by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the found item if it's finished successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestModel"
                }
              }
            }
          },
          "404": {
            "description": "An item with the specified ID was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "To delete an item. For this you must be authorized",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return OK if it's deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestModel"
                }
              }
            }
          },
          "404": {
            "description": "An item with the specified ID was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GenderStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "RequestModel": {
        "type": "object",
        "properties": {
          "errorId": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringStringTuple": {
        "type": "object",
        "properties": {
          "item1": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "double"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderStatus"
          }
        },
        "additionalProperties": false
      },
      "UserRole": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme.  Enter 'Bearer' [space] and then your token in the text input below. Example: 'Bearer 12345abcdef'",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}