// <auto-generated />
using System;
using JobService.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JobService.Migrations
{
    [DbContext(typeof(JobContext))]
    [Migration("20210424174355_JobsDB")]
    partial class JobsDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JobService.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aff61f2d-02f4-42de-896d-5aace3880669"),
                            Description = "Web Development, Mobile Development, Desktop Software Developmen, QA & Testing",
                            IsDeleted = false,
                            Name = "Web, Mobile & Software Dev",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("c8726fe0-3ac9-4352-bef3-0819b53f3768"),
                            Description = "Sales & Marketing Strategy",
                            IsDeleted = false,
                            Name = "Sales & Marketing",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("4887cb56-9a91-4fe0-bcbe-8a03a49112ea"),
                            Description = "Design, Writing, Photography & Translator",
                            IsDeleted = false,
                            Name = "Design & Writing",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("018211c5-1114-4ce3-9f6a-c836f857a529"),
                            Description = "Engineering & Architecture",
                            IsDeleted = false,
                            Name = "Engineering & Architecture",
                            Status = true
                        });
                });

            modelBuilder.Entity("JobService.Models.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32e1eb2a-e0aa-4747-9f6b-c6c39a63169f"),
                            CategoryId = new Guid("aff61f2d-02f4-42de-896d-5aace3880669"),
                            Cost = 25,
                            Description = "ASP.Net Core and Xamarin developer",
                            Duration = 2,
                            IsDeleted = false,
                            Name = "Back-end developer",
                            Status = true,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("9724f2a5-4afd-49ba-8517-59df13a53c7b"),
                            CategoryId = new Guid("aff61f2d-02f4-42de-896d-5aace3880669"),
                            Cost = 25,
                            Description = "We need experienced Angular developer for short term project.",
                            Duration = 1,
                            IsDeleted = false,
                            Name = "Angular Developer Needed",
                            Status = true,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("e4d90499-5d77-45d8-8257-05e57554500f"),
                            CategoryId = new Guid("c8726fe0-3ac9-4352-bef3-0819b53f3768"),
                            Cost = 2000,
                            Description = "Salesperson needed",
                            Duration = 2,
                            IsDeleted = false,
                            Name = "Salesperson",
                            Status = true,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("752e9873-f453-4418-81cb-6a3b1f993533"),
                            CategoryId = new Guid("4887cb56-9a91-4fe0-bcbe-8a03a49112ea"),
                            Cost = 30,
                            Description = "Design & Photography needed to build mockup of mobile app",
                            Duration = 4,
                            IsDeleted = false,
                            Name = "Design & Photography",
                            Status = true,
                            Type = 0
                        });
                });

            modelBuilder.Entity("JobService.Models.Job", b =>
                {
                    b.HasOne("JobService.Models.Category", "Category")
                        .WithMany("Jobs")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("JobService.Models.Category", b =>
                {
                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
